% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_supervised.R
\name{ml_isoreg}
\alias{ml_isoreg}
\alias{ml_isotonic_regression}
\alias{ml_isoreg,spark_tbl,formula-method}
\alias{summary,IsotonicRegressionModel-method}
\alias{predict,IsotonicRegressionModel-method}
\alias{predict,IsotonicRegressionModel,spark_tbl-method}
\alias{write_ml,IsotonicRegressionModel,character-method}
\title{Isotonic Regression Model}
\usage{
ml_isotonic_regression(
  data,
  formula,
  isotonic = TRUE,
  featureIndex = 0,
  weightCol = NULL
)

\S4method{summary}{IsotonicRegressionModel}(object)

\S4method{predict}{IsotonicRegressionModel}(object, newData)

\S4method{write_ml}{IsotonicRegressionModel,character}(object, path, overwrite = FALSE)
}
\arguments{
\item{data}{spark_tbl for training.}

\item{formula}{A symbolic description of the model to be fitted. Currently only a few formula
operators are supported, including '~', '.', ':', '+', and '-'.}

\item{isotonic}{Whether the output sequence should be isotonic/increasing (TRUE) or
antitonic/decreasing (FALSE).}

\item{featureIndex}{The index of the feature if \code{featuresCol} is a vector column
(default: 0), no effect otherwise.}

\item{weightCol}{The weight column name.}

\item{object}{a fitted IsotonicRegressionModel.}

\item{newData}{spark_tbl for testing.}

\item{path}{The directory where the model is saved.}

\item{overwrite}{Overwrites or not if the output path already exists. Default is FALSE
which means throw exception if the output path exists.}

\item{...}{additional arguments passed to the method.}
}
\value{
\code{ml_isotonic_regression} returns a fitted Isotonic Regression model.

\code{summary} returns summary information of the fitted model, which is a list.
        The list includes model's \code{boundaries} (boundaries in increasing order)
        and \code{predictions} (predictions associated with the boundaries at the same index).

\code{predict} returns a spark_tbl containing predicted values.
}
\description{
Fits an Isotonic Regression model against a spark_tbl, similarly to R's isoreg().
Users can print, make predictions on the produced model and save the model to the input path.
}
\note{
summary(IsotonicRegressionModel) since 2.1.0

predict(IsotonicRegressionModel) since 2.1.0

write_ml(IsotonicRegression, character) since 2.1.0
}
\examples{
\dontrun{
spark_session()
data <- list(list(7.0, 0.0), list(5.0, 1.0), list(3.0, 2.0),
        list(5.0, 3.0), list(1.0, 4.0))
df <- spark_tbl(data \%>\% setNames("label", "feature"))
model <- ml_isotonic_regression(df, label ~ feature, isotonic = FALSE)
# return model boundaries and prediction as lists
result <- summary(model, df)
}
}
