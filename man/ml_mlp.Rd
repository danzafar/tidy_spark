% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_supervised.R
\name{ml_mlp}
\alias{ml_mlp}
\title{Multilayer Perceptron Classification Model}
\usage{
ml_mlp(
  data,
  formula,
  layers,
  blockSize = 128,
  solver = "l-bfgs",
  maxIter = 100,
  tol = 1e-06,
  stepSize = 0.03,
  seed = NULL,
  initialWeights = NULL,
  handleInvalid = c("error", "keep", "skip")
)
}
\arguments{
\item{data}{a \code{SparkDataFrame} of observations and labels for model fitting.}

\item{formula}{a symbolic description of the model to be fitted. Currently only a few formula
operators are supported, including '~', '.', ':', '+', and '-'.}

\item{layers}{integer vector containing the number of nodes for each layer.}

\item{blockSize}{blockSize parameter.}

\item{solver}{solver parameter, supported options: "gd" (minibatch gradient descent) or "l-bfgs".}

\item{maxIter}{maximum iteration number.}

\item{tol}{convergence tolerance of iterations.}

\item{stepSize}{stepSize parameter.}

\item{seed}{seed parameter for weights initialization.}

\item{initialWeights}{initialWeights parameter for weights initialization, it should be a
numeric vector.}

\item{handleInvalid}{How to handle invalid data (unseen labels or NULL values) in features and
label column of string type.
Supported options: "skip" (filter out rows with invalid data),
                   "error" (throw an error), "keep" (put invalid data in
                   a special additional bucket, at index numLabels). Default
                   is "error".}

\item{...}{additional arguments passed to the method.}
}
\description{
\code{ml_mlp} fits a multi-layer perceptron neural network model against a SparkDataFrame.
Users can call \code{summary} to print a summary of the fitted model, \code{predict} to make
predictions on new data, and \code{write.ml}/\code{read.ml} to save/load fitted models.
Only categorical data is supported.
For more details, see
\href{http://spark.apache.org/docs/latest/ml-classification-regression.html}{
  Multilayer Perceptron}
}
\examples{
\dontrun{
df <- read_delim("data/mllib/sample_multiclass_classification_data.txt",
                 source = "libsvm")

# fit a Multilayer Perceptron Classification Model
model <- ml_mlp(df, label ~ features, blockSize = 128, layers = c(4, 3),
                solver = "l-bfgs", maxIter = 100, tol = 0.5, stepSize = 1,
                seed = 1, initialWeights = c(0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9))

# get the summary of the model
summary(model)
}
}
