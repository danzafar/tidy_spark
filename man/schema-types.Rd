% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema.R
\docType{data}
\name{ArrayType}
\alias{ArrayType}
\alias{MapType}
\alias{ByteType}
\alias{IntegerType}
\alias{FloatType}
\alias{DoubleType}
\alias{StringType}
\alias{BinaryType}
\alias{BooleanType}
\alias{TimestampType}
\alias{DateType}
\title{\code{tidyspark} Schema Types}
\format{
An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.

An object of class \code{character} of length 1.
}
\usage{
ArrayType(type, nullable)

MapType(key, value, nullable)

ByteType

IntegerType

FloatType

DoubleType

StringType

BinaryType

BooleanType

TimestampType

DateType
}
\arguments{
\item{type}{a schema object or valid string}

\item{nullable}{logical, if the field allows null values}

\item{key}{a schema object or string representing the key's type}

\item{value}{a schema object or string representing the value's type}
}
\value{
a string or if it's a nested type a \code{jobj}
}
\description{
Schema types that can be used in specifiying schemas in tidyspark. These
are typically used in the creation of `StructField` objects.
}
\examples{
StructType(
  StructField("int", IntegerType, TRUE),
  StructField("string", StringType, TRUE)
)

StructType(
  StructField("array", ArrayType(IntegerType, TRUE), TRUE),
  StructField("dict", StructType(
    StructField("extra_key", StringType, TRUE),
    StructField("key", StringType, TRUE)
  ), TRUE),
  StructField("int", IntegerType, TRUE),
  StructField("string", StringType, TRUE)
  )

}
\keyword{datasets}
