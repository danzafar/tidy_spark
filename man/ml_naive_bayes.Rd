% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml_classification.R
\name{ml_naive_bayes}
\alias{ml_naive_bayes}
\alias{ml_naive_bayes,spark_tbl,formula-method}
\alias{summary,NaiveBayesModel-method}
\alias{predict,NaiveBayesModel-method}
\alias{write_ml,NaiveBayesModel,character-method}
\title{Naive Bayes Models}
\usage{
ml_naive_bayes(
  data,
  formula,
  smoothing = 1,
  handleInvalid = c("error", "keep", "skip")
)

\S4method{summary}{NaiveBayesModel}(object)

\S4method{predict}{NaiveBayesModel}(object, newData)

\S4method{write_ml}{NaiveBayesModel,character}(object, path, overwrite = FALSE)
}
\arguments{
\item{data}{a \code{spark_tbl} of observations and labels for model fitting.}

\item{formula}{a symbolic description of the model to be fitted. Currently only a few formula
operators are supported, including '~', '.', ':', '+', and '-'.}

\item{smoothing}{smoothing parameter.}

\item{handleInvalid}{How to handle invalid data (unseen labels or NULL values) in features and
label column of string type.
Supported options: "skip" (filter out rows with invalid data),
                   "error" (throw an error), "keep" (put invalid data in
                   a special additional bucket, at index numLabels). Default
                   is "error".}

\item{object}{a naive Bayes model fitted by \code{ml_naive_bayes}.}

\item{newData}{a spark_tbl for testing.}

\item{path}{the directory where the model is saved.}

\item{overwrite}{overwrites or not if the output path already exists. Default is FALSE
which means throw exception if the output path exists.}

\item{...}{additional argument(s) passed to the method. Currently only \code{smoothing}.}
}
\value{
\code{ml_naive_bayes} returns a fitted naive Bayes model.

\code{summary} returns summary information of the fitted model, which is a list.
        The list includes \code{apriori} (the label distribution) and
        \code{tables} (conditional probabilities given the target label).

\code{predict} returns a spark_tbl containing predicted labeled in a column named
"prediction".
}
\description{
\code{ml_naive_bayes} fits a Bernoulli naive Bayes model against a spark_tbl.
Users can call \code{summary} to print a summary of the fitted model, \code{predict} to make
predictions on new data, and \code{write_ml}/\code{read_ml} to save/load fitted models.
Only categorical data is supported.
}
\note{
ml_naive_bayes since 2.0.0

summary(NaiveBayesModel) since 2.0.0

predict(NaiveBayesModel) since 2.0.0

write_ml(NaiveBayesModel, character) since 2.0.0
}
\examples{
\dontrun{
data <- as.data.frame(UCBAdmissions)
df <- spark_tbl(data)

# fit a Bernoulli naive Bayes model
model <- ml_naive_bayes(df, Admit ~ Gender + Dept, smoothing = 0)

# get the summary of the model
summary(model)

# make predictions
predictions <- predict(model, df)

# save and load the model
path <- "path/to/model"
write_ml(model, path)
savedModel <- read_ml(path)
summary(savedModel)
}
}
\seealso{
e1071: \url{https://cran.r-project.org/package=e1071}

\link{write_ml}
}
