% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SparkSession.R
\name{SparkSession}
\alias{SparkSession}
\title{The \code{SparkSession} Class}
\description{
This class was designed as a thin wrapper around Spark's
\code{SparkSession}. It is initialized when \code{spark_submit} is called.
Note, running. \code{sc$stop} will end your session. For information on
methods and types requirements, refer to the Javadoc:
https://spark.apache.org/docs/2.3.0/api/java/org/apache/spark/sql/SparkSession.html
}
\details{
Not all methods are implemented due to compatability
and tidyspark best practice usage conflicts. If you need to use a method not
included, try calling it using \code{call_method(sc$jobj, <yourMethod>)}.
}
\examples{
\dontrun{

spark <- spark_session()
rdd <- spark$range(1, 10)
rdd$collect()

spark_session_stop()
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{jobj}}{\code{SparkSession} java object}

\item{\code{conf}}{get the \code{RuntimeConfig}}

\item{\code{sparkContext}}{the sparkContext associated with the session}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SparkSession$new()}}
\item \href{#method-print}{\code{SparkSession$print()}}
\item \href{#method-close}{\code{SparkSession$close()}}
\item \href{#method-emptyDataFrame}{\code{SparkSession$emptyDataFrame()}}
\item \href{#method-range}{\code{SparkSession$range()}}
\item \href{#method-sql}{\code{SparkSession$sql()}}
\item \href{#method-table}{\code{SparkSession$table()}}
\item \href{#method-version}{\code{SparkSession$version()}}
\item \href{#method-clone}{\code{SparkSession$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{SparkSession}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$new(session_jobj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session_jobj}}{the session's jobj}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
print \code{SparkSession}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-close"></a>}}
\if{latex}{\out{\hypertarget{method-close}{}}}
\subsection{Method \code{close()}}{
Stop the underlying SparkContext.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-emptyDataFrame"></a>}}
\if{latex}{\out{\hypertarget{method-emptyDataFrame}{}}}
\subsection{Method \code{emptyDataFrame()}}{
Returns a DataFrame with no rows or columns.
Range
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$emptyDataFrame()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-range"></a>}}
\if{latex}{\out{\hypertarget{method-range}{}}}
\subsection{Method \code{range()}}{
Creates a Dataset with a single LongType column named id,
containing elements in a range from start to end (exclusive) with a step
value, with partition number specified.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$range(start = 0, end, step = NULL, numPartitions = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start}}{integer, starting value}

\item{\code{end}}{integer, ending value}

\item{\code{step}}{integer, the number of steps}

\item{\code{numPartitions}}{integer, the target number of partitions}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \code{spark_tbl}
SQL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sql"></a>}}
\if{latex}{\out{\hypertarget{method-sql}{}}}
\subsection{Method \code{sql()}}{
Executes a SQL query using Spark, returning the result as a
DataFrame. The dialect that is used for SQL parsing can be configured
with 'spark.sql.dialect'.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$sql(sqlText)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sqlText}}{string, a SQL query

Table}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-table"></a>}}
\if{latex}{\out{\hypertarget{method-table}{}}}
\subsection{Method \code{table()}}{
Returns the specified table/view as a DataFrame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$table(tableName)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tableName}}{is either a qualified or unqualified name that designates
a table or view. If a database is specified, it identifies the table/view
from the database. Otherwise, it first attempts to find a temporary view
with the given name and then match the table/view from the current
database. Note that, the global temporary view database is also valid here.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a \code{spark_tbl}

Version
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-version"></a>}}
\if{latex}{\out{\hypertarget{method-version}{}}}
\subsection{Method \code{version()}}{
The version of Spark on which this application is running.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$version()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SparkSession$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
